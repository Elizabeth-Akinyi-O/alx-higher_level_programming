============================================
2-matrix_divided module
============================================

Doc test for the matrix_divided function. Divides all elements of a matrix
============================================

Import the function:

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided


    >>> matrix_divided("Something here", 11)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided([["Holberton School", "Alx SE"], [11, 7]], 4)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided([[1, 3, 5], [2, 4, 6]], 4)
    [[0.25, 0.75, 1.25], [0.5, 1.0, 1.5]]

    >>> matrix_divided([[1, 3, 5], [2, 4, ]], 4)
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size

    >>> matrix_divided([[1, 3, 5], [2, 4, 6]], "Hey you")
    Traceback (most recent call last):
    TypeError: div must be a number

    >>> matrix_divided([[1, 9, 8], [2, 5, 7]], 0)
    Traceback (most recent call last):
    ZeroDivisionError: division by zero

    >>> matrix_divided([[9, 8], [2, 5]], float('inf'))
    [[0.0, 0.0], [0.0, 0.0]]

    >>> matrix = [[2, 4, 6]]
    >>> matrix_divided(matrix, 4)
    [[0.5, 1.0, 1.5]]
    >>> print(matrix)
    [[2, 4, 6]]

    matrix_divided([[1, 9, 8], [2, 5, 7]])
    Traceback (most recent call last):
    TypeError: matrix_divided() missing 1 required positional argument: 'div'
